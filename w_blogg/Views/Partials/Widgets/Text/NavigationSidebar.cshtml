@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.NavigationSidebar>
@using ContentModels = Umbraco.Web.PublishedModels;
@using Umbraco.Web.Models
@{
    var links = Model.Links;
    var levelsRendered = 0;
    var levelsOfChildren = int.Parse(Model.LevelsOfChildren.ToString());
}

<div class="block-text__aside-item block-text__aside-item--links @(Model .Boxed ? "block-text__aside-item--boxed" : "")">

    @if (Model.Heading != "")
    {
        <h4 class="h6">@Model.Heading</h4>
    }
    
    <nav class="navigation navigation--level-@levelsOfChildren">
        <ul>
            @if (links != null && links.Any())
            {
                foreach (Link link in links)
                {
                    if(link.Udi != null && link.Type == LinkType.Content){
                        var node = Umbraco.Content(link.Udi);
                        
                        @ListChildNodes(link, node, levelsRendered, levelsOfChildren)
                    } else {
                        <li>
                            <div>
                                <a href="@(link.Url)" target="@(link.Target)" @if(link.Target == "_blank"){ <text>rel="noopener"</text> }>@link.Name</a>
                            </div>
                        </li>
                    }
                }
            }
        </ul>
    </nav>
</div>
@helper ListChildNodes(Link link, IPublishedContent root, int levelsRendered, int levelsOfChildren){
    var expandLabel = Umbraco.GetDictionaryValue("Show Subpages");

    if(levelsOfChildren >= levelsRendered){
        var children = root.Children
        .Where(x => x.IsVisible())
        .Where(x => x?.ContentType?.Alias != "sitemap" && x?.ContentType?.Alias != "websiteSettings").ToList();
        levelsRendered++;
    
        if((Model.OnlyRenderChildren && levelsRendered > 1) || !Model.OnlyRenderChildren){
            if(link != null){
                <li class="@(link.Url == Umbraco.AssignedContentItem.Url ? "selected" : "")">
                    <div>
                        <a href="@(link.Url)" target="@(link.Target)" @if(link.Target == "_blank"){ <text>rel="noopener"</text> }>@link.Name</a>
                        @if(children.Count > 0 && levelsOfChildren >= levelsRendered){
                            <button aria-expanded="false" aria-label="@expandLabel"></button>
                        }
                    </div>
                    @if(children.Count > 0){
                        <ul>
                            @foreach(var child in children){
                                @ListChildNodes(null, child, levelsRendered, levelsOfChildren)
                            }
                        </ul>
                    }
                </li>
            } else {
                <li class="@(root.Url == Umbraco.AssignedContentItem.Url ? "selected" : "")">
                    <div>
                        <a href="@(root.Url)" >@root.Name</a>
                        @if(children.Count > 0 && levelsOfChildren >= levelsRendered){
                            <button aria-expanded="false" aria-label="@expandLabel"></button>
                        }
                    </div>
                    @if(children.Count > 0 ){
                        <ul>
                            @foreach(var child in children){
                                @ListChildNodes(null, child, levelsRendered, levelsOfChildren)
                            }
                        </ul>
                    }
                </li>
            }
        } else {
            foreach(var child in children){
                @ListChildNodes(null, child, levelsRendered, levelsOfChildren)
            }
        }
    }
}